name: Deploy to Development

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for manual deployment"
        required: true
        default: "Manual deployment requested"

env:
  ENVIRONMENT: development
  DOCKER_REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/freeagentics

jobs:
  deploy:
    name: Deploy to Development Environment
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_PREFIX }}-backend:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_PREFIX }}-backend:dev-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: backend

      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_PREFIX }}-frontend:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_PREFIX }}-frontend:dev-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: frontend
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.DEV_API_URL }}

      - name: Deploy to Development Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            # Navigate to deployment directory
            cd /opt/freeagentics

            # Pull latest images
            docker-compose -f docker-compose.dev.yml pull

            # Deploy with zero downtime
            docker-compose -f docker-compose.dev.yml up -d --no-deps --scale backend=2 backend
            sleep 10
            docker-compose -f docker-compose.dev.yml up -d --no-deps frontend

            # Clean up old containers
            docker system prune -f

      - name: Run post-deployment tests
        run: |
          # Wait for services to be ready
          sleep 30

          # Test backend health
          curl -f ${{ secrets.DEV_API_URL }}/health || exit 1

          # Test frontend
          curl -f ${{ secrets.DEV_APP_URL }} || exit 1

      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Development deployment ${{ job.status }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            Message: ${{ github.event.head_commit.message }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
