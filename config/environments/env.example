# CogniticNet Environment Configuration Template
# Copy this file to .env.{environment} and fill in the values
# DO NOT commit actual environment files with secrets to version control

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Node environment: development, test, staging, production
NODE_ENV=development

# Frontend URLs (Next.js)
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000

# Application metadata
NEXT_PUBLIC_APP_NAME="CogniticNet"
NEXT_PUBLIC_APP_VERSION="0.1.0"
NEXT_PUBLIC_APP_DESCRIPTION="Multi-Agent AI System with Active Inference"

# ============================================================================
# BACKEND API CONFIGURATION
# ============================================================================

# API Server settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=1
API_RELOAD=true
API_LOG_LEVEL=debug

# CORS settings
API_CORS_ORIGINS=["http://localhost:3000"]
API_CORS_CREDENTIALS=true

# Request limits
API_MAX_REQUEST_SIZE=10485760  # 10MB
API_REQUEST_TIMEOUT=300        # 5 minutes

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL connection
DATABASE_URL=postgresql://cogniticnet:password@localhost:5432/cogniticnet_dev
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30

# Database migrations
DATABASE_AUTO_MIGRATE=false
DATABASE_SEED_DATA=false

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis connection
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_MAX_CONNECTIONS=10
REDIS_DECODE_RESPONSES=true

# Cache settings
CACHE_TTL=3600              # 1 hour default TTL
CACHE_KEY_PREFIX=cogniticnet

# ============================================================================
# LLM CONFIGURATION
# ============================================================================

# Primary LLM provider: anthropic, openai, ollama
LLM_PROVIDER=anthropic

# API Keys (obtain from respective providers)
ANTHROPIC_API_KEY=your_anthropic_api_key_here
OPENAI_API_KEY=your_openai_api_key_here
PERPLEXITY_API_KEY=your_perplexity_api_key_here

# Model selection
DEFAULT_MODEL=claude-3-opus-20240229
FALLBACK_MODEL=gpt-4-turbo-preview
RESEARCH_MODEL=sonar-medium-online
LOCAL_MODEL=llama2:7b

# LLM settings
LLM_MAX_TOKENS=4096
LLM_TEMPERATURE=0.7
LLM_TOP_P=0.9
LLM_FREQUENCY_PENALTY=0.0
LLM_PRESENCE_PENALTY=0.0
LLM_REQUEST_TIMEOUT=60

# Context window management
LLM_CONTEXT_WINDOW=100000
LLM_CONTEXT_COMPRESSION=true
LLM_CONTEXT_SUMMARIZATION=true

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Encryption and secrets (generate secure random values for production)
ENCRYPTION_KEY=generate_32_byte_secure_random_key_here
JWT_SECRET=generate_secure_random_jwt_secret_here
API_KEY_SALT=generate_secure_random_salt_here
SESSION_SECRET=generate_secure_session_secret_here

# JWT settings
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24
JWT_REFRESH_EXPIRATION_DAYS=30

# Security headers
SECURITY_HSTS_ENABLED=true
SECURITY_CSP_ENABLED=true
SECURITY_FRAME_OPTIONS=DENY

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Development features
ENABLE_HOT_RELOAD=true
ENABLE_DEBUG_TOOLS=true
ENABLE_API_DOCS=true
ENABLE_GRAPHQL_PLAYGROUND=true

# System features
ENABLE_MULTI_AGENT=true
ENABLE_KNOWLEDGE_GRAPH=true
ENABLE_ACTIVE_INFERENCE=true
ENABLE_EDGE_DEPLOYMENT=false
ENABLE_DEMO_MODE=false

# Experimental features
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_BETA_MODELS=false

# ============================================================================
# RESOURCE LIMITS
# ============================================================================

# Agent system limits
MAX_AGENTS_PER_SIMULATION=10
MAX_SIMULATION_STEPS=1000
MAX_AGENT_MEMORY_MB=100
MAX_CONCURRENT_SIMULATIONS=5

# Knowledge graph limits
MAX_KNOWLEDGE_GRAPH_NODES=10000
MAX_KNOWLEDGE_GRAPH_EDGES=50000
MAX_GRAPH_QUERY_DEPTH=10

# API rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST_SIZE=100

# ============================================================================
# MONITORING AND LOGGING
# ============================================================================

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_TO_FILE=true
LOG_FILE_PATH=/var/log/cogniticnet
LOG_FILE_MAX_SIZE=100M
LOG_FILE_BACKUP_COUNT=5

# Metrics and monitoring
ENABLE_METRICS=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Error tracking (Sentry, etc.)
ERROR_TRACKING_ENABLED=false
SENTRY_DSN=

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# AWS Configuration (if using S3, etc.)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
AWS_S3_BUCKET=

# Email service (SendGrid, etc.)
EMAIL_ENABLED=false
EMAIL_PROVIDER=sendgrid
SENDGRID_API_KEY=
EMAIL_FROM_ADDRESS=noreply@cogniticnet.ai
EMAIL_FROM_NAME=CogniticNet

# ============================================================================
# DEVELOPMENT TOOLS
# ============================================================================

# Task Master configuration
TASKMASTER_ENABLED=true
TASKMASTER_API_KEY=your_anthropic_api_key_for_taskmaster

# Testing
TEST_DATABASE_URL=postgresql://cogniticnet:password@localhost:5432/cogniticnet_test
TEST_REDIS_URL=redis://localhost:6379/1

# Development utilities
SEED_DEMO_DATA=true
MOCK_EXTERNAL_SERVICES=true
VERBOSE_ERROR_MESSAGES=true

# ============================================================================
# DOCKER CONFIGURATION
# ============================================================================

# Container settings
COMPOSE_PROJECT_NAME=cogniticnet
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# Volume paths
DATA_VOLUME_PATH=./data
LOGS_VOLUME_PATH=./logs

# ============================================================================
# MCP (Model Context Protocol) SERVER
# ============================================================================

MCP_SERVER_ENABLED=true
MCP_SERVER_PORT=8001
MCP_SERVER_HOST=0.0.0.0
MCP_MAX_CONTEXT_LENGTH=100000

# ============================================================================
# NOTES
# ============================================================================
# 1. Generate secure random values for all secrets in production
# 2. Use environment-specific values for URLs and ports
# 3. Never commit files with actual secrets to version control
# 4. Rotate keys and secrets regularly
# 5. Use strong passwords for database connections
# 6. Enable only necessary features in production
# 7. Set appropriate resource limits based on your infrastructure
